group = 'com.yahoo.parsec.parsec-templates'

buildscript{
    repositories {
        maven{
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies{
        classpath group: 'com.gradle.publish'                  , name: 'plugin-publish-plugin', version: '0.9.4'
        classpath group: 'com.github.jengelman.gradle.plugins' , name: 'shadow'               , version: '1.2.3'
        classpath group: 'com.jfrog.bintray.gradle'            , name: 'gradle-bintray-plugin', version: '1.6'
        classpath group: 'net.researchgate'                    , name: 'gradle-release'       , version: '2.4.0'
    }
}

apply plugin: 'groovy'
apply plugin: 'pmd'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow' //shadowJar
apply plugin: 'net.researchgate.release' //release plugin
apply plugin: 'com.jfrog.bintray' //bintray plugin
apply plugin: "com.gradle.plugin-publish" //publish plugin

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

    //gradle-templates
    maven{
        url 'http://dl.bintray.com/cjstehno/public'
    }
}

dependencies {
    compile (group: 'org.codehaus.groovy', name: 'groovy-all'      , version: '2.4.4'){transitive = true}
    compile (group: 'gradle-templates'   , name: 'gradle-templates', version: '1.4.1'){transitive = true}
    compile gradleApi()
    compile localGroovy()

    testCompile group:'org.codehaus.groovy', name: 'groovy-all' , version: '2.4.4'
    testCompile group:'org.spockframework' , name: 'spock-core' , version: '1.0-groovy-2.4'
    testCompile group:'junit'              , name: 'junit'      , version: '4.12'
    testCompile group:'cglib'              , name: 'cglib-nodep', version: '2.2'
}

//For maven-publish plugin (local testing only)
publishing {
    publications{
        maven(MavenPublication){
            from components.java
            artifact shadowJar
        }
    }
    repositories{
        maven {
            url uri('./repo')
        }
    }
}

//For plugin-publish plugin
pluginBundle {
    website = 'http://www.gradle.org/'
    vcsUrl = 'https://github.com/gradle/gradle'
    description = 'Parsec extension of gradle-templates'
    tags = ['templates', 'parsec']
    plugins {
         parsecTemplatesPlugin {
            id = 'com.yahoo.parsec.template-plugin'
            displayName = 'Parsec Template Plugin'
         }
    }
}

//For gradle release plugin
release {
    //release configurations
    failOnUnversionedFiles = false

}

updateVersion << {
    def apply_file = new File('installation', 'apply.groovy')
    def oldVersion = project.property("release.releaseVersion")
    def newVersion = project.property("release.newVersion")
    ant.replaceregexp(file: apply_file, match: "version: '\\S+'", replace: "version: '${oldVersion}'")
}

beforeReleaseBuild.dependsOn check
afterReleaseBuild.dependsOn publishPlugins


//For bintray plugin: temporary for apply.groovy only
//Must be done manually as of now
bintray {

    //TODO: replace personal account with Parsec's official account
    user = bintray_user
    key = bintray_key

    filesSpec {
        from './installation'
        into '.'
    }

    publish = true

    pkg {
        repo = 'Gradle'
        name = 'parsec-templates'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/wayne-wu/Gradle.git'

        version {
            name = '1.0-Test'
            desc = 'Parsec Templates Apply Test'
            vcsTag = '1.3.0'

        }
    }
}


//TODO: Need to chain up bintrayUpload with publishUpload once an overriding method for file is found

